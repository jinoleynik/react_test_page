{"version":3,"sources":["configuration/Configuration.js","configuration/actions.js","routes.js","providers/authProvider.js","components/login.js","components/dashboard/CardList.js","components/dashboard/GradesChart.js","components/dashboard/LessonProgressChart.js","components/dashboard.js","themeReducer.js","i18n/en.js","providers/queries/dashboard.js","providers/queries/teacher.js","providers/queries/index.js","providers/queries/lesson.js","providers/queries/classroom.js","providers/queries/lessonModel.js","providers/queries/lessonGroup.js","providers/queries/question.js","providers/queries/review.js","providers/queries/student.js","providers/dataProvider.js","components/Footer.js","components/lessonModel/ModelView.js","components/lessonModel/PolyModelView.js","components/admin/lessonModels.js","components/admin/RichModelEditor.js","components/admin/Utils.js","components/admin/lessons.js","components/admin/lessonGroups.js","components/admin/students.js","components/admin/reviews.js","components/admin/questions.js","components/admin/classrooms.js","components/admin/teachers.js","components/admin/SubMenu.js","components/admin/Menu.js","components/themes.js","components/admin/AppLayout.js","components/ListItems.js","App.js","serviceWorker.js","index.js"],"names":["enhance","compose","connect","state","theme","locale","i18n","changeLocale","changeTheme","type","payload","translate","withStyles","label","width","display","button","margin","_ref","classes","react_default","a","createElement","Card_default","Title","title","CardContent_default","className","Button_default","variant","color","onClick","routes","Route","exact","path","component","Configuration","authProvider","params","AUTH_CHECK","localStorage","getItem","Promise","resolve","reject","AUTH_ERROR","console","log","AUTH_LOGOUT","removeItem","AUTH_LOGIN","username","password","request","Request","getServerUrl","method","body","JSON","stringify","email","headers","Headers","Content-Type","fetch","then","response","status","Error","statusText","json","token","role","setItem","AUTH_GET_PERMISSIONS","CustomLoginPage","props","Login","Object","assign","backgroundImage","loginForm","LoginForm","rowGray","backgroundColor","headerWhite","list","_ref$showValue","showValue","value","name","List_default","subheader","ListSubheader_default","map","item","i","ListItem_default","key","ListItemText_default","primary","GradesChart","data","CardHeader_default","es6","height","dataKey","cx","cy","labelLine","outerRadius","LessonProgressChart","_ref$data","strokeDasharray","stroke","Dashboard","this","fetchCounter","dataProvider","GET_ONE","setState","objectSpread","_this$state","announcements","lessons","students","grades","lessonProgress","announcementView","dashboard_CardList","date","toLocaleString","message","Responsive","small","profile","firstName","lastName","dashboard_GradesChart","dashboard_LessonProgressChart","medium","Component","version","admin","ui","viewVersion","withDataProvider","themeReducer","previousState","arguments","length","undefined","en","englishMessages","pos","configuration","language","light","dark","menu","users","resources","dashboard","modelName","description","code","info","teacher","student","myStudents","edit","review","create","question","classroom","numberStudents","numberLessons","lesson","myLessons","lessonModel","shape","lessonGroup","getRandomInt","max","Math","random","getMockLessonProgress","d","Date","setDate","getDate","dateStr","toLocaleDateString","push","substr","lastIndexOf","lessonsPassed","getMockAnno","id","queries","Lesson","raFetchType","query","gql","_templateObject","variables","parseResponse","model","_templateObject2","allLessons","total","_templateObject3","filter","ids","indexOf","_templateObject4","createLesson","_templateObject5","updateLesson","Classroom","classroom_templateObject","classroom_templateObject2","allClassrooms","classroom_templateObject3","createClassroom","classroom_templateObject4","subject","updateClassroom","classroom_templateObject5","result","deleteClassroom","ok","LessonModel","lessonModel_templateObject","codeModel","thumbnail","lessonModel_templateObject2","allLessonModels","lessonModel_templateObject3","lessonModel_templateObject4","newLessonModel","createLessonModel","lessonmodel","lessonModel_templateObject5","updateLessonModel","_templateObject6","deleteLessonModel","LessonGroup","lessonGroup_templateObject","lessonGroup_templateObject2","allLessonGroups","lessonGroup_templateObject3","lessonGroup_templateObject4","newLessongroup","createLessonGroup","lessongroup","lessonGroup_templateObject5","updateLessonGroup","lessonGroup_templateObject6","deleteLessonGroup","Question","question_templateObject","question_templateObject2","allQuestions","question_templateObject3","idList","question_templateObject4","newLessonquestion","createLessonQuestion","lessonquestion","question_templateObject5","updateLessonQuestion","question_templateObject6","deleteLessonQuestion","Review","review_templateObject","review_templateObject2","allReviews","review_templateObject3","review_templateObject4","newLessonreview","createLessonReview","lessonreview","review_templateObject5","updateLessonReview","review_templateObject6","deleteLessonReview","Student","student_templateObject","student_templateObject2","allStudents","student_templateObject3","student_templateObject4","createStudent","student_templateObject5","updateStudent","student_templateObject6","deleteStudent","dashboard_templateObject","fill","Teacher","teacher_templateObject","_response$data$teache","classroomSet","teacher_templateObject2","allTeachers","teacher_templateObject3","teacher_templateObject4","buildQuery","resourceName","authLink","setContext","_","authorization","concat","client","ApolloClient","link","createHttpLink","uri","cache","InMemoryCache","Footer","style","right","bottom","left","zIndex","padding","textAlign","text","POLY_API_KEY","ModelView","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadAssetByCode","url","Accept","asset","createObj","start","frameId","requestAnimationFrame","animate","time","performance","now","camera","position","x","sin","z","cos","lookAt","renderer","render","scene","that","assertThisInitialized","isLoading","format","formats","find","formatType","obj","root","mtl","resource","endsWith","slice","relativePath","loader","MTLLoader","setCrossOrigin","setMaterialOptions","ignoreZeroRGBs","setResourcePath","load","materials","OBJLoader","setMaterials","object","box","Box3","setFromObject","center","getCenter","y","min","sub","scaler","Group","add","scale","setScalar","getSize","container","children","remove","THREE","_this$props","viewer","document","getElementById","WIDTH","HEIGHT","set","background","ambient","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","assetUrl","showInfo","authorName","displayName","nextProps","nextState","PolyModelView","renderAssets","assets","nextPageToken","items","forEach","image","onItemClick","data-id","src","alt","loadMore","Cached_default","loadPoly","e","onChange","input","dataId","target","getAttribute","currentAsset","search","event","preventDefault","isNextPage","toConsumableArray","totalSize","_this2","Input_default","Search_default","ModelView_ModelView","required","LessonExpand","record","Typography_default","gutterBottom","LessonModelTitle","_ref2","reference","lessonModels","icon","Icon","list_List","bulkActions","Datagrid","rowClick","expand","lessonModels_LessonExpand","TextField","source","ImageField","Edit","TabbedForm","redirect","FormTab","DisabledInput","TextInput","validate","LongTextInput","Field","Create","RichModelEditor","onValueChanges","renderList","listName","views","flex","TextField_default","flexItem","onBlur","updateItem","IconButton_default","aria-label","flexButton","Delete_default","addItem","Add_default","splice","out","renderAnswer","choices","answer","answerList","column","InputLabel_default","Select_default","MenuItem_default","parse","video","instructions","hints","withQuestions","flexDirection","columns","alignSelf","getTitleFromJson","LessonTitle","admin_lessons","FunctionField","lessons_LessonTitle","SimpleForm","ReferenceInput","SelectInput","optionText","optionValue","LessonGroupTitle","lessonGroups","show","ShowController","controllerProps","Show","SimpleShowLayout","RichTextField","StudentTitle","admin_students","permissions","objectWithoutProperties","EmailField","reviews","questions","renderName","choice","ClassroomTitle","classrooms","renderProfileName","classrooms_ClassroomTitle","ReferenceArrayInput","SelectArrayInput","TeacherPanel","components_ListItems","basePath","teachers","teachers_TeacherPanel","listItem","paddingLeft","listItemText","fontSize","sidebarIsOpen","transition","sidebarIsClosed","handleToggle","isOpen","react","dense","ListItemIcon_default","ExpandMore_default","inset","secondary","Collapse_default","in","timeout","unmountOnExit","disablePadding","Divider_default","Menu","menuCatalog","menuSales","menuCustomers","defineProperty","onMenuClick","open","logout","DashboardMenuItem","MenuItemLink","to","primaryText","smart_count","leftIcon","WithPermissions","admin_SubMenu","menuUsers","menuLessons","Settings_default","withRouter","sidebarOpen","darkTheme","palette","lightTheme","paper","default","main","contrastText","CustomSidebar","Sidebar","size","Layout","sidebar","_ref$list","href","i18nProvider","__webpack_require__","bind","messages","App","buildGraphQLProvider","introspection","Fragment","Admin","loginPage","customRoutes","customReducers","appLayout","AppLayout","Resource","Footer_Footer","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a48db27.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { translate, changeLocale, Title } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport compose from 'recompose/compose';\nimport { changeTheme } from './actions';\n\nconst styles = {\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n};\n\nconst Configuration = ({\n    classes,\n    theme,\n    locale,\n    changeTheme,\n    changeLocale,\n    translate,\n}) => (\n    <Card>\n        <Title title={translate('pos.configuration')} />\n        <CardContent>\n            <div className={classes.label}>{translate('pos.theme.name')}</div>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={theme === 'light' ? 'primary' : 'default'}\n                onClick={() => changeTheme('light')}\n            >\n                {translate('pos.theme.light')}\n            </Button>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={theme === 'dark' ? 'primary' : 'default'}\n                onClick={() => changeTheme('dark')}\n            >\n                {translate('pos.theme.dark')}\n            </Button>\n        </CardContent>\n        <CardContent>\n            <div className={classes.label}>{translate('pos.language')}</div>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={locale === 'en' ? 'primary' : 'default'}\n                onClick={() => changeLocale('en')}\n            >\n                en\n            </Button>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={locale === 'es' ? 'primary' : 'default'}\n                onClick={() => changeLocale('es')}\n            >\n                es\n            </Button>\n        </CardContent>\n    </Card>\n);\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    locale: state.i18n.locale,\n});\n\nconst enhance = compose(\n    connect(\n        mapStateToProps,\n        {\n            changeLocale,\n            changeTheme,\n        }\n    ),\n    translate,\n    withStyles(styles)\n);\n\nexport default enhance(Configuration);\n","export const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = theme => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Configuration from './configuration/Configuration';\n// import Segments from './segments/Segments';\n\nexport default [\n    <Route exact path=\"/configuration\" component={Configuration} />,\n    // <Route exact path=\"/segments\" component={Segments} />,\n];\n","import { AUTH_LOGIN, AUTH_CHECK, AUTH_LOGOUT, AUTH_ERROR, AUTH_GET_PERMISSIONS } from 'react-admin';\nimport {getServerUrl} from './server'\n\nexport default (type, params) => {\n  if (type === AUTH_CHECK) {\n    return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n  }\n  if (type === AUTH_ERROR) {\n    console.log(params)\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_LOGOUT) {\n    localStorage.removeItem('token');\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_LOGIN) {\n    const { username, password } = params;\n    console.log(\"LOGIN = \"+getServerUrl())\n    const request = new Request(getServerUrl()+'/api/token-auth/', {\n      method: 'POST',\n      body: JSON.stringify({ email: username, password }),\n      headers: new Headers({ 'Content-Type': 'application/json' }),\n    })\n    return fetch(request)\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ token, role }) => {\n        if (role) {\n          localStorage.setItem(\"role\", role)\n        } else {\n          if (username === \"terence@superteam.io\") {\n            localStorage.setItem(\"role\", \"Admin\")\n          } else if (username === \"jinoleynik@gmail.com\") {\n            localStorage.setItem(\"role\", \"Teacher\")\n          } else {\n            localStorage.removeItem(\"role\")\n          }\n        }\n        localStorage.setItem('token', token);\n      });\n  }\n  if (type === AUTH_GET_PERMISSIONS) {\n    const role = localStorage.getItem('role');\n    return role ? Promise.resolve(role) : Promise.reject();\n  }\n  return Promise.reject('Unknown method');\n}\n","import React from 'react';\nimport { Login, LoginForm } from 'react-admin';\n\nconst CustomLoginPage = props => (\n  <Login\n    backgroundImage=\"/bg.jpg\"\n    loginForm={<LoginForm />}\n    {...props}\n  />\n);\n\nexport default CustomLoginPage;\n","import React from 'react'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { translate } from 'react-admin';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\n\nconst styles = {\n    rowGray: { backgroundColor: \"rgba(100,100,100,0.2)\"},\n    headerWhite: {backgroundColor: \"-internal-root-color\"}\n};\n\nconst CardList = ({ translate, classes, list, title, className, showValue = (value) => value.name }) => {\n\n    return (\n        <Card className={className}>\n            <List\n                subheader={<ListSubheader className={classes.headerWhite} component=\"div\">{translate(title)}</ListSubheader>}\n                component=\"nav\">\n                {\n                    (list || []).map((item, i) =>\n                        <ListItem key={title + \"_\" + i} className={i % 2 ? classes.rowGray : \"\"}>\n                            <ListItemText primary={showValue(item)} />\n                        </ListItem>\n                    )\n                }\n            </List>\n        </Card>\n    )\n}\n\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(CardList); ","import React from 'react'\nimport { PieChart, Pie, Tooltip, Legend} from 'recharts';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n\nconst GradesChart = ({ data, className, title }) => {\n\n    return (\n        <Card className={className}>\n            <CardHeader subheader={title} />\n            <PieChart width={400} height={300}>\n                <Pie\n                    label\n                    data={data}\n                    dataKey=\"value\"\n                    cx={200}\n                    cy={150}\n                    labelLine={true}\n                    outerRadius={100}\n                />\n                <Tooltip />\n                <Legend />  \n            </PieChart>\n        </Card>\n    )\n}\n\nexport default GradesChart\n","import React from 'react'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst LessonProgressChart = ({ data = [], className, title }) => {\n    return (<Card className={className}>\n        <CardHeader subheader={title} />\n        <LineChart width={400} height={300} data={data}     >\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip />\n            <Legend />  \n            <Line type=\"monotone\" dataKey=\"lessonsPassed\" stroke=\"#82ca9d\" />\n        </LineChart>\n    </Card>\n    );\n}\n\nexport default LessonProgressChart\n","import React, { Component } from 'react';\nimport { GET_ONE, withDataProvider, Title, translate, Responsive } from 'react-admin';\nimport CardContent from '@material-ui/core/CardContent';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport CardList from \"./dashboard/CardList\"\nimport GradesChart from \"./dashboard/GradesChart\"\nimport LessonProgressChart from \"./dashboard/LessonProgressChart\"\nimport './dashboard.css';\n\nclass Dashboard extends Component {\n\n  state = {}\n\n  componentDidMount() {\n    this.fetchCounter()\n  }\n\n  async fetchCounter() {\n    const { dataProvider } = this.props;\n    let { data } = await dataProvider(GET_ONE, \"Dashboard\")\n    this.setState({\n      ...data\n    })\n  }\n\n  render() {\n    const {\n      announcements,\n      lessons,\n      students,\n      grades,\n      lessonProgress\n    } = this.state;\n    const { translate } = this.props;\n    const announcementView = <CardList\n      list={announcements}\n      className=\"fixed-height\"\n      showValue={item => item.date.toLocaleString() + \" - \" + item.message}\n      title=\"resources.dashboard.announcements\" />\n    return (\n      <div>\n        <Title title='resources.dashboard.title' />\n        <CardContent>\n          <Responsive\n            small={\n              <div className=\"flex-col\">\n                {announcementView}\n                <CardList\n                  className=\"fixed-height top-space\"\n                  title=\"resources.student.myStudents\"\n                  showValue={item => item.profile.firstName + \" \" + item.profile.lastName}\n                  list={students} />\n                <CardList\n                  className=\"fixed-height top-space\"\n                  title=\"resources.lesson.myLessons\"\n                  list={lessons} />\n                <GradesChart\n                  data={grades}\n                  className=\"top-space\"\n                  title={translate(\"resources.dashboard.grades\")} />\n                <LessonProgressChart\n                  data={lessonProgress}\n                  className=\"top-space\"\n                  title={translate(\"resources.dashboard.lessonProgress\")} />\n              </div>\n            }\n            medium={\n              <div>\n                {announcementView}\n                <div className=\"flex-row\">\n                  <CardList\n                    className=\"fixed-height left-col\"\n                    title=\"resources.student.myStudents\"\n                    showValue={item => item.profile.firstName + \" \" + item.profile.lastName}\n                    list={students} />\n                  <CardList\n                    className=\"fixed-height right-col\"\n                    title=\"resources.lesson.myLessons\"\n                    list={lessons} />\n                </div>\n                <div className=\"flex-row\">\n                  <GradesChart\n                    data={grades}\n                    className=\"left-col\"\n                    title={translate(\"resources.dashboard.grades\")} />\n                  <LessonProgressChart\n                    data={lessonProgress}\n                    className=\"right-col\"\n                    title={translate(\"resources.dashboard.lessonProgress\")} />\n                </div>\n              </div>\n            }\n          />\n        </CardContent>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  version: state.admin.ui.viewVersion,\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withDataProvider,\n  translate\n)(Dashboard);\n\n","import { CHANGE_THEME } from './configuration/actions';\n\nexport default (previousState = 'light', { type, payload }) => {\n    if (type === CHANGE_THEME) {\n        return payload;\n    }\n    return previousState;\n};\n","import englishMessages from 'ra-language-english';\n\nexport default {\n    ...englishMessages,\n    pos: {\n        configuration: 'Configuration',\n        language: 'Language',\n        theme: {\n            name: 'Theme',\n            light: 'Light',\n            dark: 'Dark',\n        },\n        menu: {\n            users: \"Users\",\n            lessons: \"Lessons\",\n        }\n    },\n    resources: {\n        dashboard: {\n            title: \"RedHouse - Virtual Education\",\n            announcements: \"Announcements\",\n            lessonProgress: \"Lesson progress\",\n            grades: \"Grades\"\n        },\n        name: \"Name\",\n        modelName: \"Model Name\",\n        description: \"Description\",\n        code: \"Code\",\n        info: \"Info\",   \n        teacher: {\n            name: \"Teacher |||| Teachers\",\n            title: \"Teachers\"\n        },\n        student: {\n            name: \"Student |||| Students\",\n            title: \"Students\",\n            myStudents: \"My Students\",\n            edit: \"Edit Student %{reference}\",\n        },\n        review: {\n            name: \"Review |||| Reviews\",\n            title: \"Reviews\",\n            label: \"Review\",\n            create: \"Create Review\",\n            edit: \"Edit Review\"\n        },\n        question: {\n            name: \"Question |||| Questions\",\n            title: \"Questions\",\n            label: \"Question\",\n            create: \"Create Question\",\n            edit: \"Edit Question\"\n        },\n        classroom: {\n            name: \"Classroom |||| Classrooms\",\n            title: \"Classrooms\",\n            numberStudents: \"Number of Students\",\n            numberLessons: \"Number of Lessons\",\n            teacher: \"Teacher\"\n        },\n        lesson: {\n            name: \"Lesson |||| Lessons\",\n            title: \"Lessons\",\n            label: \"Lesson\",\n            myLessons: \"My Lessons\",\n            edit: \"Edit Lesson %{reference}\",\n\n        },\n        lessonModel: {\n            name: \"Lesson Model |||| Lesson Models\",\n            title: \"Lesson Models\",\n            create: \"Create Lesson Model\",\n            edit: \"Edit Lesson Model %{reference}\",\n            shape: \"Shape\"\n          \n        },\n        lessonGroup: {\n            name: \"Lesson Group |||| Lesson Groups\",\n            title: \"Lesson Groups\",\n        \n        },\n    }\n    \n\n}","import gql from 'graphql-tag';\n\nconst getRandomInt = (max = 10) => {\n  return ~~(Math.random()*max)\n}\n\nconst getMockLessonProgress = () => {\n  const days = 7\n  let list = []\n  let d = new Date(); \n  for (let i = 0; i< days; i++) {\n    let date = new Date()\n    date.setDate(d.getDate()-days+i)\n    let dateStr = date.toLocaleDateString()\n    list.push({\n      name: dateStr.substr(0, dateStr.lastIndexOf(\"/\")),\n      lessonsPassed: getRandomInt(10)\n    })\n  }\n  return list;\n}\n\nconst getMockAnno = () => {\n  let list = []\n  for (let i = 0; i < 10; i++) {\n      list.push({\n          id: i,\n          date: new Date(),\n          message: \"New model has been created \" + i\n      })\n  }  \n  return list;\n}\n\nconst getMockGrades = () => {\n  const gradeColors = [\"#1b3a6b\", \"#2757a3\", \"#2e67c1\", \"#3376e0\"] \n  return gradeColors.map((item, i) => {\n    return {\n      value: getRandomInt(),\n      name: \"Grade \"+i,\n      fill: item\n    }\n  })\n}\n\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case 'GET_ONE':\n      return {\n        query: gql`query getCounts{\n          allStudents {\n             profile{\n              id\n              firstName\n              lastName\n            }\n          }           \n          allLessonModels{\n            id\n            name\n          }    \n        }`,\n        variables: params,\n        parseResponse: response => {              \n          return {\n            data: {\n              id: 0,\n              announcements: getMockAnno(),\n              grades: getMockGrades(),\n              lessonProgress: getMockLessonProgress(),\n              students: response.data.allStudents,\n              lessons: response.data.allLessonModels        \n            }\n          }\n        }\n      };\n    default:\n      return {};\n\n  }\n\n}\n","import gql from 'graphql-tag';\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case 'GET_ONE':\n      return {\n        query: gql`query teacher($id: Int ){\n            teacher(id: $id) {\n               profile{\n                id\n                email\n                firstName\n                lastName\n              }\n              classroomSet{\n                id\n                name\n              }\n            }\n          }`,\n        variables: params,\n        parseResponse: response => {\n          const { profile, classroomSet } = response.data.teacher\n          const outData = {\n            ...profile,\n            classroomSet\n          }\n          return {\n            data: outData\n          }\n        }\n      }\n    case 'GET_LIST':\n      return {\n        query: gql`query allTeachers{\n              allTeachers {\n                profile{\n                  id\n                  email\n                  firstName\n                  lastName\n                }\n                classroomSet{\n                  id\n                  name\n                }\n              }\n            }`,\n        variables: params,\n        parseResponse: response => {\n          let list = response.data.allTeachers.map(item => {\n            return {\n              ...item.profile,\n              classroomSet: item.classroomSet\n            }\n          })\n          return {\n            data: list,\n            total: list.length\n          }\n        }\n      };\n    case 'GET_MANY':\n      return {\n        query: gql`query allTeachers{\n                allTeachers {\n                  profile{\n                    id\n                    email\n                    firstName\n                    lastName\n                  }\n                  classroomSet{\n                    id\n                    name\n                  }\n                }\n              }`,\n        variables: params,\n        parseResponse: response => {\n          let list = response.data.allTeachers.filter(item => {\n            return params.ids.indexOf(item.profile.id) !== -1;\n          }).map(item => {\n            return {\n              ...item.profile,\n              classroomSet: item.classroomSet\n            }\n          })\n          return {\n            data: list,\n            total: list.length\n          }\n        }\n      };\n    case \"UPDATE\":\n      return {\n        query: gql`mutation updateTeacher($id: ID!, $teacher: UserUpdateInput){\n                  updateTeacher(id: $id, profile: $teacher) {\n                    teacher{\n                      profile{\n                        id\n                        email\n                        firstName\n                        lastName\n                      }\n                    }\n                  } \n                }`,\n        variables: {\n          \"id\": params.id,\n          \"teacher\": {\n            \"email\": params.data.email,\n            \"firstName\": params.data.firstName,\n            \"lastName\": params.data.lastName,\n            \"password\": params.data.password,\n          }\n        },\n        parseResponse: response => {\n          console.log(response)\n          return {\n            data: response.data.updateStudent.student.profile\n          };\n        }\n      };\n    default:\n      return {};\n  }\n}\n","import lesson from './lesson'\nimport classroom from './classroom'\nimport lessonModel from './lessonModel'\nimport lessonGroup from './lessonGroup'\nimport question from './question'\nimport review from './review'\nimport student from './student'\nimport dashboard from './dashboard'\nimport teacher from './teacher'\n\nexport default {\n  Lesson: lesson,\n  Classroom: classroom,\n  LessonModel: lessonModel,\n  LessonGroup: lessonGroup,\n  Question: question,\n  Review: review,\n  Student: student,\n  Dashboard: dashboard,\n  Teacher: teacher\n}\n","import gql from 'graphql-tag';\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case 'GET_ONE':\n      return {\n        query: gql`query lesson ($id: Int) {\n          lesson(id: $id) {\n            id\n            model{\n              id\n              name\n              code\n              description\n            }\n            lesson\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          let { lesson } = response.data;\n          return {\n            data: {\n              model: lesson.model.id,\n              ...lesson\n            }\n          }\n        }\n      };\n    case 'GET_LIST':\n      return {\n        query: gql`query allLessons {\n          allLessons {\n            id\n            model{\n              id\n              name\n              code\n              description\n            }\n            lesson\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          return {\n            data: response.data.allLessons,\n            total: response.data.allLessons.length\n          }\n        }\n      };\n    case 'GET_MANY':\n      return {\n        query: gql`query allLessons {\n          allLessons {\n            id\n            model{\n              id\n              name\n              code\n              description\n            }\n            lesson\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          let list = response.data.allLessons.filter(item => {\n            return params.ids.indexOf(item.id) !== -1;\n          });\n          return {\n            data: list,\n            total: list.length\n          }\n        }\n      };\n    case 'CREATE':\n      return {\n        query: gql`mutation createLesson($lesson: LessonCreateGenericType!) {\n          createLesson(newLesson: $lesson) {\n            ok\n            lesson{\n              id\n              lesson\n              model{\n                id\n                name\n                code\n                description\n              }\n            }         \n          }\n        }`,\n        variables: {\n          lesson: {\n            model: params.data.model,\n            lesson: JSON.stringify(params.data.lesson)\n          }\n        },\n        parseResponse: response => {\n          let data = response.data.createLesson.lesson;\n          return {\n            data: {\n              model: data.model.id,\n              ...data\n            }\n          }\n        }\n      };\n    case 'UPDATE':\n      return {\n        query: gql`mutation updateLesson($lesson: LessonUpdateGenericType!) {\n           updateLesson(newLesson: $lesson) {\n            ok\n            lesson{\n              id\n              lesson\n              model{\n                id\n                name\n                code\n                description\n              }\n            }         \n          }\n        }`,\n        variables: {\n          lesson: {\n            id: params.data.id,\n            model: params.data.model.id,\n            lesson: JSON.stringify(params.data.lesson)\n          }\n        },\n        parseResponse: response => {\n          let data = response.data.updateLesson.lesson;\n          return {\n            data: {\n              model: data.model.id,\n              ...data\n            }\n          }\n        }\n      };\n    default:\n      return {};\n  };\n}\n","import gql from 'graphql-tag';\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case 'GET_ONE':\n      return {\n        query: gql`query classroom ($id: Int) {\n          classroom(id: $id) {\n            id\n            name\n            subject\n            teacher{\n              profile{\n                id\n              }\n            }\n            students{\n              profile{\n                id\n              }\n            }\n            lessons{\n              id\n            }\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          let { classroom } = response.data\n          let students = classroom.students.map(item => item.profile.id)\n          return {\n            data: {\n              id: classroom.id,\n              name: classroom.name,\n              teacher: classroom.teacher.profile.id,\n              students: students\n            }\n          }\n        }\n      };\n    case 'GET_LIST':\n      return {\n        query: gql`query allClassrooms {\n          allClassrooms {\n            id\n            name\n            subject\n            teacher{\n              profile{\n                id\n                firstName\n                lastName\n              }\n            }\n            students {\n              profile{\n                id\n              }\n            }        \n            lessons{\n              id\n              name\n            }\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          return {\n            data: response.data.allClassrooms,\n            total: response.data.allClassrooms.length\n          }\n        }\n      };\n    case 'CREATE':\n      return {\n        query: gql`mutation createClassroom($classroom: ClassRoomInput) {\n          createClassroom(classroom: $classroom) {\n            ok\n            classroom{\n              id\n              name\n              subject\n              teacher{\n                profile{\n                  id\n                  firstName\n                  lastName\n                }\n              }\n              students{\n                 profile{\n                  id\n                  firstName\n                  lastName\n                }\n              }\n              lessons{\n                id\n                name\n              }\n            }\n          }\n        }`,\n        variables: {\n          \"classroom\": params.data\n        },\n        parseResponse: response => {\n          return {\n            data: response.data.createClassroom.classroom\n          }\n        }\n      };\n    case 'UPDATE':\n      return {\n        query: gql`mutation updateClassroom($classroom: UpdateClassRoomInput) {\n          updateClassroom(classroom: $classroom) {\n            ok\n            classroom{\n              id\n              name\n              subject\n              teacher{\n                profile{\n                  id\n                  firstName\n                  lastName\n                }\n              }\n              students{\n                 profile{\n                  id\n                  firstName\n                  lastName\n                }\n              }\n              lessons{\n                id\n                name\n              }\n            }\n          }\n        }`,\n        variables: {\n          \"classroom\": {\n            id: params.data.id,\n            lessons: params.data.lessons,\n            name: params.data.name,\n            students: params.data.students,\n            teacher: params.data.teacher,\n            subject: params.data.subject\n          }\n        },\n        parseResponse: response => {\n          return {\n            data: response.data.updateClassroom.classroom\n          }\n        }\n      };\n    case \"DELETE\":\n      return {\n        query: gql`mutation deleteClassroom($id: ID!) {\n            deleteClassroom(id: $id){\n              ok\n            }\n          }`,\n        variables: {\n          \"id\": params.id\n        },\n        parseResponse: response => {\n          return {\n            data: {\n              id: params.id,\n              result: response.data.deleteClassroom.ok\n            }\n          };\n        }\n      };\n    default:\n      return {};\n  }\n}\n","import gql from 'graphql-tag';\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case 'GET_ONE':\n      return {\n        query: gql`query lessonModel ($id: Int) {\n          lessonModel(id: $id) {\n            id\n            name\n            code\n            description\n            thumbnail\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          const {lessonModel} = response.data;\n          return {\n            data: {\n              codeModel: {\n                code: lessonModel.code,\n                thumbnail: lessonModel.thumbnail\n              },\n              ...lessonModel\n            }\n          }\n        }\n      }\n    case 'GET_LIST':\n      return {\n        query: gql`query allLessonModels {\n            allLessonModels {\n              id\n              code\n              name\n              description\n              thumbnail\n            }\n          }`,\n        variables: params,\n        parseResponse: response => {\n          return {\n            data: response.data.allLessonModels,\n            total: response.data.allLessonModels.length\n          }\n        }\n      };\n    case 'GET_MANY':\n      return {\n        query: gql`query allLessonModels {\n            allLessonModels {\n              id\n              code\n              name\n              description\n            }\n          }`,\n        variables: params,\n        parseResponse: response => {\n          let list = response.data.allLessonModels.filter(item => params.ids.indexOf(item.id) !== -1)\n          return {\n            data: list,\n            total: list.length\n          }\n        }\n      };\n    case 'CREATE':\n      return {\n        query: gql`mutation createLessonModel($newLessonModel: LessonModelCreateGenericType!){\n              createLessonModel(newLessonmodel: $newLessonModel){\n                 ok\n                lessonmodel{\n                  id\n                  code\n                  name\n                  thumbnail\n                  description      \n                }\n              }\n            }`,\n        variables: {\n          \"newLessonModel\": {\n            id:  params.data.id,\n            name: params.data.name,\n            description: params.data.description,\n            code:  params.data.codeModel.code,\n            thumbnail:  params.data.codeModel.thumbnail\n          }\n        },\n        parseResponse: response => {\n          return {\n            data: response.data.createLessonModel.lessonmodel\n          };\n        }\n      };\n    case 'UPDATE':\n      return {\n        query: gql`mutation updateLessonModel($lessonModel: LessonModelUpdateGenericType!) {\n          updateLessonModel(newLessonmodel: $lessonModel) {\n            ok\n            lessonmodel {\n              id\n              code\n              name\n              thumbnail\n              description\n            }\n          }\n        }`,\n        variables: {\n          \"lessonModel\": {\n            id:  params.data.id,\n            name: params.data.name,\n            description: params.data.description,   \n            code:  params.data.codeModel.code,\n            thumbnail:  params.data.codeModel.thumbnail\n          }\n        },\n        parseResponse: response => {\n          return {\n            data: response.data.updateLessonModel.lessonmodel\n          };\n        }\n      };\n    case \"DELETE\":\n      return {\n        query: gql`mutation deleteLessonModel($id: ID!) {\n          deleteLessonModel(id: $id){\n            ok\n          }\n        }`,\n        variables: {\n          \"id\": params.id\n        },\n        parseResponse: response => {\n          return {\n            data: {\n              id: params.id,\n              result: response.data.deleteLessonModel.ok\n            }\n          };\n        }\n      };\n    default:\n      return {};\n  }\n}\n","import gql from 'graphql-tag';\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case 'GET_ONE':\n      return {\n        query: gql`query lessonGroup ($id: Int) {\n        lessonGroup (id: $id) {\n          id\n          name\n          lesson {\n            id\n            lesson\n            model{\n              id\n              name\n              code\n              description\n            }\n          }\n          question {\n            id\n            question\n          }\n          review {\n            id\n            review\n          }\n        }\n      }`,\n        variables: params,\n        parseResponse: response => {\n          return {\n            data: response.data.lessonGroup\n          }\n        }\n      }\n    case 'GET_LIST':\n      return {\n        query: gql`query allLessonGroups {\n        allLessonGroups {\n          id\n          name\n          lesson{\n            id\n            model{\n              id\n              name\n            }\n          }\n        }\n      }`,\n        variables: params,\n        parseResponse: response => {\n          return {\n            data: response.data.allLessonGroups,\n            total: response.data.allLessonGroups.length\n          }\n        }\n      };\n    case 'GET_MANY':\n      return {\n        query: gql`query allLessonGroups {\n            allLessonGroups {\n              id\n              name\n            }\n          }`,\n        variables: params,\n        parseResponse: response => {\n          let list = response.data.allLessonGroups.filter(item => {\n            return params.ids.indexOf(item.id) !== -1;\n          });\n          return {\n            data: list,\n            total: list.length\n          }\n        }\n      };\n    case 'CREATE':\n      return {\n        query: gql`mutation createLessonGroup($newLessongroup: LessonGroupCreateGenericType!){\n          createLessonGroup(newLessongroup: $newLessongroup) {\n            ok\n            errors{\n              messages\n            }\n            lessongroup{\n              id\n              name              \n            }\n          }\n        }`,\n        variables: {\n          newLessongroup: params.data\n        },\n        parseResponse: response => {\n          return {\n            data: response.data.createLessonGroup.lessongroup\n          }\n        }\n      };\n    case 'UPDATE':\n      return {\n        query: gql`mutation updateLessonGroup($newLessongroup: LessonGroupUpdateGenericType!){\n            updateLessonGroup(newLessongroup: $newLessongroup) {\n              ok\n              errors{\n                messages\n              }\n              lessongroup{\n                id\n                name         \n              }\n            }\n          }`,\n        variables: {\n          newLessongroup: {\n            id: params.data.id,\n            \n          } \n        },\n        parseResponse: response => {\n          return {\n            data: response.data.updateLessonGroup.lessongroup\n          }\n        }\n      };\n    case \"DELETE\":\n      return {\n        query: gql`mutation deleteLessonGroup($id: ID!) {\n              deleteLessonGroup(id: $id){\n                ok\n              }\n            }`,\n        variables: {\n          \"id\": params.id\n        },\n        parseResponse: response => {\n          return {\n            data: {\n              id: params.id,\n              result: response.data.deleteLessonGroup.ok\n            }\n          };\n        }\n      };\n\n    default:\n      return {}\n  }\n\n\n\n}\n","import gql from 'graphql-tag';\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case \"GET_ONE\":\n      return {\n        query: gql`query question ($id: Int) {\n          question (id: $id) {\n            id\n            question\n            model{\n              id\n              name\n            }\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          let { question } = response.data;\n          return {\n            data: {\n              model: question.model.id,\n              ...question\n            }\n          }\n        }\n      };\n    case \"GET_LIST\":\n      return {\n        query: gql`query allQuestions {\n          allQuestions {\n            id\n            question\n            model{\n              id\n              name\n            }\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          return {\n            data: response.data.allQuestions,\n            total: response.data.allQuestions.length\n          }\n        }\n      };\n    case \"GET_MANY\": \n      return {\n        query: gql`query allQuestions($idList: [ID]) {\n            allQuestions(idList: $idList) {\n              id\n              question\n              model{\n                id\n                name\n              }\n            }\n          }`,\n        variables: {\n          idList: params.ids\n        },\n        parseResponse: response => {\n          return {\n            data: response.data.allQuestions,\n            total: response.data.allQuestions.length\n          }\n        }\n      };\n     \n    case \"CREATE\":\n      return {\n        query: gql`mutation createQuestion($newLessonquestion: LessonQuestionCreateGenericType!) {\n          createLessonQuestion(newLessonquestion: $newLessonquestion) {\n            ok\n            lessonquestion{\n              id\n              question\n              model{\n                id\n                name\n              }\n            }\n            errors{\n              field\n              messages\n            }\n          }\n        }`,\n        variables: {\n          newLessonquestion: {\n            model: params.data.model,\n            question: JSON.stringify(params.data.question)\n          }\n        },\n        parseResponse: response => {\n          let data = response.data.createLessonQuestion.lessonquestion;\n          return {\n            data: {\n              model: data.model.id,\n              ...data\n            }\n          }\n        }\n      };\n    case \"UPDATE\":\n      return {\n        query: gql`mutation updateLessonQuestion($newLessonquestion: LessonQuestionUpdateGenericType!){\n          updateLessonQuestion(newLessonquestion: $newLessonquestion){\n            ok\n            errors{\n              messages\n              field\n            }\n            lessonquestion{\n              id\n              question\n              model{\n                id\n                name\n              }\n            }\n          }\n        }`,\n        variables: {\n          newLessonquestion: {\n            id: params.data.id,\n            model: params.data.model.id,\n            question: JSON.stringify(params.data.question)\n          }\n        },\n        parseResponse: response => {\n          let data = response.data.updateLessonQuestion.lessonquestion;\n          return {\n            data: {\n              model: data.model.id,\n              ...data\n            }\n          }\n        }\n      };\n    case \"DELETE\":\n      return {\n        query: gql`mutation deleteLessonQuestion($id: ID!) {\n          deleteLessonQuestion(id: $id){\n            ok\n          }\n        }`,\n        variables: {\n          \"id\": params.id\n        },\n        parseResponse: response => {\n          return {\n            data: {\n              id: params.id,\n              result: response.data.deleteLessonQuestion.ok\n            }\n          };\n        }\n      };\n    default:\n      return {};\n  }\n}\n","import gql from 'graphql-tag';\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case \"GET_ONE\":\n      return {\n        query: gql`query review ($id: Int) {\n          review (id: $id) {\n            id\n            review\n            model{\n              id\n              name\n            }\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          let { review } = response.data;\n          return {\n            data: {\n              model: review.model.id,\n              ...review\n            }\n          }\n        }\n      };\n    case 'GET_LIST':\n      return {\n        query: gql`query allReviews {\n          allReviews {\n            id\n            review\n            model{\n              id\n              name\n            }\n          }\n        }`,\n        variables: params,\n        parseResponse: response => {\n          return {\n            data: response.data.allReviews || [],\n            total: (response.data.allReviews || []).length\n          }\n        }\n      };\n    case \"GET_MANY\":\n      return {\n        query: gql`query allQuestions($idList: [ID]) {\n                allQuestions(idList: $idList) {\n                  id\n                  question\n                  model{\n                    id\n                    name\n                  }\n                }\n              }`,\n        variables: {\n          idList: params.ids\n        },\n        parseResponse: response => {\n          return {\n            data: response.data.allQuestions,\n            total: response.data.allQuestions.length\n          }\n        }\n      };\n    case \"CREATE\":\n      return {\n        query: gql`mutation createReview($newLessonreview: LessonReviewCreateGenericType!) {\n          createLessonReview(newLessonreview: $newLessonreview) {\n            ok\n            lessonreview{\n              id\n              review\n              model{\n                id\n                name\n              }\n            }\n            errors{\n              field\n              messages\n            }\n          }\n        }`,\n        variables: {\n          newLessonreview: {\n            model: params.data.model,\n            review: JSON.stringify(params.data.review)\n          }\n        },\n        parseResponse: response => {\n          let data = response.data.createLessonReview.lessonreview;\n          return {\n            data: {\n              model: data.model.id,\n              ...data\n            }\n          }\n        }\n      };\n    case \"UPDATE\":\n      return {\n        query: gql`mutation updateLessonReview($newLessonreview: LessonReviewUpdateGenericType!){\n            updateLessonReview(newLessonreview: $newLessonreview){\n                ok\n                errors{\n                  messages\n                  field\n                }\n                lessonreview{\n                  id\n                  review\n                  model{\n                    id\n                    name\n                  }\n                }\n              }\n            }`,\n        variables: {\n          newLessonreview: {\n            id: params.data.id,\n            model: params.data.model.id,\n            review: JSON.stringify(params.data.review)\n          }\n        },\n        parseResponse: response => {\n          let data = response.data.updateLessonReview.lessonreview;\n          return {\n            data: {\n              model: data.model.id,\n              ...data\n            }\n          }\n        }\n      };\n    case \"DELETE\":\n      return {\n        query: gql`mutation deleteLessonReview($id: ID!) {\n        deleteLessonReview(id: $id){\n            ok\n          }\n        }`,\n        variables: {\n          \"id\": params.id\n        },\n        parseResponse: response => {\n          return {\n            data: {\n              id: params.id,\n              result: response.data.deleteLessonReview.ok\n            }\n          };\n        }\n      };\n    default:\n      return {};\n  }\n}\n","import gql from 'graphql-tag';\n\nexport default (raFetchType, params) => {\n  switch (raFetchType) {\n    case \"GET_ONE\":\n      return {\n        query: gql`query student($id: Int ){\n            student(id: $id) {\n               profile{\n                id\n                email\n                firstName\n                lastName\n              }\n            }\n          }`,\n        variables: params,\n        parseResponse: response => {\n          return {\n            data: response.data.student.profile\n          }\n        }\n      };\n    case \"GET_MANY\":\n      return {\n        query: gql`query allStudents{\n                allStudents {\n                   profile{\n                    id\n                    email\n                    firstName\n                    lastName\n                  }\n                }\n              }`,\n        variables: params,\n        parseResponse: response => {\n          let list = response.data.allStudents.filter(item => {\n            return params.ids.indexOf(item.profile.id) !== -1;\n          }).map(item => {\n            return {\n              ...item.profile\n            }\n          })\n          return {\n            data: list,\n            total: list.length\n          }\n        }\n      };\n    case 'GET_LIST':\n\n      return {\n        query: gql`query allStudents{\n                allStudents {\n                   profile{\n                    id\n                    email\n                    firstName\n                    lastName\n                  }\n                }\n              }`,\n        variables: params,\n        parseResponse: response => {\n          let list = response.data.allStudents.map(item => item.profile)\n          return {\n            data: list,\n            total: list.length\n          }\n        }\n      };\n    case \"CREATE\":\n      return {\n        query: gql`mutation createStudent($student: UserInput){\n                createStudent(student: $student)  {\n                  student{\n                    profile{\n                      id\n                      email\n                      firstName\n                      lastName\n                    }\n                  }\n                }\n              }`,\n        variables: {\n          \"student\": params.data\n        },\n        parseResponse: response => {\n          return {\n            data: response.data.createStudent.student.profile\n          };\n        }\n      };\n    case \"UPDATE\":\n      return {\n        query: gql`mutation updateStudent($id: ID!, $student: UserUpdateInput){\n                  updateStudent(id: $id, profile: $student) {\n                    student{\n                      profile{\n                        id\n                        email\n                        firstName\n                        lastName\n                      }\n                    }\n                  } \n                }`,\n        variables: {\n          \"id\": params.id,\n          \"student\": {\n            \"email\": params.data.email,\n            \"firstName\": params.data.firstName,\n            \"lastName\": params.data.lastName,\n            \"password\": params.data.password,\n          }\n        },\n        parseResponse: response => {\n          console.log(response)\n          return {\n            data: response.data.updateStudent.student.profile\n          };\n        }\n      }\n    case \"DELETE\":\n      return {\n        query: gql`mutation deleteStudent($id: ID!) {\n                      deleteStudent(id: $id){\n                        ok\n                      }\n                    }`,\n        variables: {\n          \"id\": params.id\n        },\n        parseResponse: response => {\n          return {\n            data: {\n              id: params.id,\n              result: response.data.deleteStudent.ok\n            }\n          };\n        }\n      };\n    default:\n      return {};\n  }\n}\n","import { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context';\nimport queries from './queries';\nimport buildGraphQLProvider from 'ra-data-graphql';\nimport { getServerUrl } from './server'\n\nconst buildQuery = () => (raFetchType, resourceName, params) => {\n    return queries[resourceName] ? queries[resourceName](raFetchType, params) : null\n}\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('token');\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Token ${token}` : \"\",\n        }\n    }\n});\nconst client = new ApolloClient({\n    link: authLink.concat(\n        createHttpLink({ uri: getServerUrl() + \"/graphql_private\" })\n    ),\n    cache: new InMemoryCache(),\n});\n\nexport const buildDataProvider = () => buildGraphQLProvider({ client, buildQuery, introspection: false })\n","import React from 'react'\n\nexport const Footer = (props) => {\n  return (\n    <div style={{\n        right: 0, bottom: 0, left: 0, zIndex: 100,\n        padding: \"1em\",\n        textAlign: 'center',\n      }}>\n      {props.text}\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport * as THREE from 'three';\nimport { MTLLoader, OBJLoader, Box3, Group } from 'three-full';\nimport './PolyModelView.css';\nconst POLY_API_KEY = 'AIzaSyD6NmC_Gz35LViW1xPoGbTsvirDQTK2hMo'\n\n\nexport default class ModelView extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.frameId = null;\n    this.scene = new THREE.Scene();\n    this.container = null;\n    this.camera = null;\n    this.renderer = null;\n    this.isLoading = false;\n  }\n\n  componentDidMount() {\n    const { width, height } = this.props;\n    const viewer = document.getElementById('modelViewer');\n\n    const WIDTH = width || 600;\n    const HEIGHT = height || 600;\n\n    this.camera = new THREE.PerspectiveCamera(60, WIDTH / HEIGHT, 0.01, 100);\n    this.renderer = new THREE.WebGLRenderer();\n    this.container = new Group();\n    this.scene.add(this.container);\n    this.camera.position.set(5, 3, 5);\n    this.camera.lookAt(0, 1.5, 0);\n    this.scene.background = new THREE.Color(0x222222);\n    this.scene.add(new THREE.GridHelper(10, 10));\n\n    const ambient = new THREE.HemisphereLight(0xbbbbff, 0x886666, 0.75);\n    ambient.position.set(-0.5, 0.75, -1);\n    this.scene.add(ambient);\n\n    const light = new THREE.DirectionalLight(0xffffff, 0.75);\n    light.position.set(1, 0.75, 0.5);\n    this.scene.add(light);\n\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(WIDTH, HEIGHT);\n    viewer.appendChild(this.renderer.domElement);\n    this.start();\n    if (this.props.assetUrl) {\n      this.loadAssetByCode(this.props.assetUrl)\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      assetUrl: props.assetUrl,\n      asset: props.asset\n    };\n  }\n\n  render() {\n    const { asset } = this.state;\n    const { showInfo } = this.props\n    return (\n      <div>\n        <div id=\"modelViewer\"></div>\n        {asset && showInfo && <div>\n          <p>{asset.authorName}</p>\n          <p>{asset.displayName}</p>\n          <p>{asset.description}</p>\n        </div>}\n      </div>\n    )\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.asset !== this.state.asset && nextProps.asset) {\n      this.createObj(nextProps.asset)\n    } else if (nextProps.assetUrl && (this.state.assetUrl !== nextProps.assetUrl)) {\n      this.loadAssetByCode(nextProps.assetUrl)\n    }\n    return nextState.asset !== this.state.asset\n      || (!!nextProps.assetUrl && (this.state.assetUrl !== nextProps.assetUrl));\n  }\n\n  loadAssetByCode = (value) => {\n    let url = `https://poly.googleapis.com/v1/${value}?key=${POLY_API_KEY}`;\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(response => response.json())\n      .then(asset => {\n        if (asset) {\n          this.createObj(asset)\n          this.setState({\n            asset: asset\n          });\n        }\n      })\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  animate = () => {\n    var time = performance.now() / 5000;\n    this.camera.position.x = Math.sin(time) * 5;\n    this.camera.position.z = Math.cos(time) * 5;\n    this.camera.lookAt(0, 1.5, 0);\n    this.renderer.render(this.scene, this.camera)\n    this.frameId = requestAnimationFrame(this.animate)\n  }\n\n  createObj = (asset) => {\n    const that = this;\n    this.isLoading = true;\n    var format = asset.formats.find(format => { return format.formatType === 'OBJ'; });\n    var obj = format.root;\n    var mtl = format.resources.find(resource => { return resource.url.endsWith('mtl') });\n    var path = obj.url.slice(0, obj.url.indexOf(obj.relativePath));\n    var loader = new MTLLoader();\n    loader.setCrossOrigin(true);\n    loader.setMaterialOptions({ ignoreZeroRGBs: true });\n    loader.setResourcePath(path);\n    loader.load(mtl.url, function (materials) {\n\n      var loader = new OBJLoader();\n      loader.setMaterials(materials);\n      loader.load(obj.url, function (object) {\n\n        var box = new Box3();\n        box.setFromObject(object);\n\n        // re-center\n        var center = box.getCenter();\n        center.y = box.min.y;\n        object.position.sub(center);\n\n        // scale\n        var scaler = new Group();\n        scaler.add(object);\n        scaler.scale.setScalar(6 / box.getSize().length());\n        const container = that.container\n        while (container.children.length) {\n          container.remove(container.children[0]);\n        }\n        container.add(scaler);\n        that.isLoading = false;\n      });\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport './PolyModelView.css';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ModelView from './ModelView'\n\nimport MoreIcon from '@material-ui/icons/Cached';\nconst POLY_API_KEY = 'AIzaSyD6NmC_Gz35LViW1xPoGbTsvirDQTK2hMo'\n\n\nexport default class PolyModelView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: 'car',\n            assets: []\n        }\n    }\n\n    componentDidMount() {       \n        const { value } = this.props.input\n        if (value && value.code) {\n            this.loadAssetByCode(value.code)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"search-inputs\">\n                    <p>Search poly model</p>\n                    <Input\n                        type=\"text\"\n                        value={this.state.query}\n                        onChange={(e) => this.setState({ query: e.target.value })}\n                    />\n                    <Button type=\"submit\" onClick={this.search} color=\"secondary\" variant=\"contained\">\n                        <SearchIcon/>\n                        Search\n                    </Button>\n                </div>\n                {this.renderAssets()}\n                <ModelView\n\n                    asset={this.state.currentAsset}\n                    showInfo/>\n            </div>\n        )\n    }\n\n    // authorName: \"Alex “SAFFY” Safayan\"\n    // createTime: \"2018-03-11T02:03:54.657143Z\"\n    // description: \"A low poly storage ship scene modeled off of https://be.net/zika-↵A.M.S. - Alex Michael Safayan :)↵↵Follow me:↵https://www.instagram.com/newpxl/↵https://twitter.com/alexsafayan↵↵Tags: #boat #ship #storage #water #river #road #car #truck #building #city\"\n    // displayName: \"Storage Ship\"\n    // formats: (4) [{…}, {…}, {…}, {…}]\n    // isCurated: true\n    // license: \"CREATIVE_COMMONS_BY\"\n    // name: \"assets/bzRjbJ74JCr\"\n    // presentationParams: {orientingRotation: {…}, colorSpace: \"LINEAR\", backgroundColor: \"#01579b\"}\n    // thumbnail: {relativePath: \"bzRjbJ74JCr.png\", url: \"https://lh3.googleusercontent.com/R_rOIi8aaB6q7q13gopjZE5cBOXmSmM860lyxLTACUZBCAgmCIBYyP3bDhfRWi_E\", contentType: \"image/png\"}\n    // updateTime: \"2019-05-08T18:35:21.116871Z\"\n    // visibility: \"PUBLIC\"\n    renderAssets = () => {\n        const { assets, nextPageToken } = this.state\n        let items = [];\n        assets.forEach(item => {\n            let image = <img\n                onClick={this.onItemClick}\n                data-id={item.name}\n                className=\"poly-thumbnail\"\n                key={item.name}\n                src={item.thumbnail.url}\n                alt={item.displayName}\n            />\n            items.push(image)\n        });\n        if (nextPageToken) {\n            const loadMore = <span key={\"loadMore\"} className=\"poly-thumbnail\">\n                <MoreIcon className=\"poly-thumbnail\" onClick={this.loadMore} />\n            </span>;\n            items.push(loadMore)\n        }\n        if (items.length) {\n            return (<div><hr /><span>{items}</span></div>)\n        } else {\n            return null\n        }\n    }\n\n    loadMore = () => {\n        const { query } = this.state\n        this.loadPoly(query, true)\n    }\n\n    onItemClick = (e) => {\n        const { assets } = this.state\n        const { onChange } = this.props.input\n        const dataId = e.target.getAttribute(\"data-id\")\n        console.log(e)\n        if (assets && dataId) {\n            let item = assets.find(item => item.name === dataId)\n            if (item) {\n                if (onChange) {\n                    onChange({\n                      code: item.code,\n                      thumbnail: item.thumbnail.url\n                    })\n                }\n                this.setState({\n                    currentAsset: item\n                })\n            }\n        }\n    }\n\n    loadAssetByCode = (value) => {\n        let url = `https://poly.googleapis.com/v1/${value}?key=${POLY_API_KEY}`;\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(response => response.json())\n            .then(asset => {\n                console.log(asset)\n                if (asset) {\n                    // this.createObj(asset)\n                    this.setState({\n                        currentAsset: asset\n                    });\n                }\n            })\n    }\n\n    search = (event) => {\n        event.preventDefault();\n        const { query } = this.state\n        this.loadPoly(query, false)\n    }\n\n    //https://developers.google.com/poly/reference/api/rest/v1/assets/list\n    loadPoly = (query, isNextPage = false) => {\n        let url = `https://poly.googleapis.com/v1/assets?keywords=${query}&pageSize=20&format=OBJ&key=${POLY_API_KEY}`;\n        if (isNextPage && this.state.nextPageToken) {\n            url += \"&pageToken=\" + this.state.nextPageToken\n        }\n\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(response => response.json())\n            .then(json => {\n                console.log(json)\n                let assets = json.assets\n                let currentAsset = this.state.currentAsset\n                if (isNextPage) {\n                    assets = [...this.state.assets, ...json.assets]\n                } else {\n                    currentAsset = null;\n                }\n                this.setState({\n                    currentAsset: currentAsset,\n                    assets: assets,\n                    nextPageToken: json.nextPageToken,\n                    totalSize: json.totalSize\n                })\n            })\n    }  \n}\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  FormTab,\n  TabbedForm,\n  Edit,\n  Create,\n  TextField,\n  DisabledInput,\n  TextInput,\n  LongTextInput,\n  translate,\n  ImageField  \n} from 'react-admin';\nimport PolyModelView from '../../components/lessonModel/PolyModelView'\nimport { Field } from 'redux-form';\nimport Icon from '@material-ui/icons/Polymer';\nimport Typography from '@material-ui/core/Typography';\n\nconst required = (message = 'Required') => value => value ? undefined : message;\n\nconst LessonExpand = ({ record }) =>(\n    <div>\n      <Typography color=\"textSecondary\" gutterBottom>Description</Typography>\n      <Typography >{record.description}</Typography>   \n    </div>\n)\n\nconst LessonModelList = (props) => (\n  <List  bulkActions={false} {...props} title={'resources.lessonModel.title'} >\n    <Datagrid rowClick=\"edit\" expand={<LessonExpand/>}>\n      <TextField source=\"name\" />      \n      <ImageField source=\"thumbnail\"  className=\"thumbNailView\" label='resources.lessonModel.shape'/>\n      <TextField source=\"code\" />\n    </Datagrid>\n  </List>\n);\n\nconst LessonModelTitle = translate(({ record, translate }) => (\n  <span>\n    {translate('resources.lessonModel.edit', { reference: record.name })}\n  </span>\n));\n\nconst LessonModelEdit = (props) => (\n  <Edit title={<LessonModelTitle />} {...props}>\n    <TabbedForm redirect=\"list\">\n      <FormTab label=\"info\">\n        <DisabledInput source=\"id\" />\n        <TextInput source=\"name\" validate={required()} />\n        <LongTextInput source=\"description\" validate={required()} />\n      </FormTab>\n      <FormTab label=\"3dModel\">\n        <Field name=\"codeModel\" component={PolyModelView} validate={required()} />\n      </FormTab>\n    </TabbedForm>\n  </Edit>\n);\n\nconst LessonModelCreate = (props) => {\n  return <Create title=\"resources.lessonModel.create\" {...props}>\n    <TabbedForm redirect=\"list\">\n      <FormTab label=\"resources.info\">\n        <TextInput source=\"name\" validate={required()} />\n        <LongTextInput source=\"description\" validate={required()  } />        \n      </FormTab>\n      <FormTab label=\"3dModel\">\n        <Field name=\"codeModel\" component={PolyModelView} validate={required()} />\n      </FormTab>\n    </TabbedForm>\n  </Create>\n};\n\nexport default {\n  icon: Icon,\n  list: LessonModelList,\n  edit: LessonModelEdit,\n  create: LessonModelCreate\n}\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport compose from 'recompose/compose';\nimport { translate } from 'react-admin';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  columns: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  column: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  flex: {\n    display: 'flex'\n  },\n  flexItem: {\n    flex: 1\n  },\n  flexButton: {\n    alignSelf: 'center'\n  }\n};\n\nclass RichModelEditor extends Component {\n\n  constructor(props) {\n    super(props)\n    let json = {}\n    try {\n      json = JSON.parse(props.input.value)\n    } catch (e) { }\n    this.state = {\n      title: json.title || \"\",\n      video: json.video || \"\",\n      instructions: json.instructions || [\"\"],\n      choices: json.choices || [\"\"],\n      hints: json.hints || [\"\"],\n      answer: json.answer || \"\"\n    }\n  }\n\n  onValueChanges = () => {\n    const { onChange } = this.props.input\n    onChange({ ...this.state })\n    console.log(this.props.input)\n  }\n\n  render() {\n    const { classes, withQuestions } = this.props\n    return (\n      <div className={classes.container}>\n        <TextField\n          label=\"Title\"\n          type=\"text\"\n          margin=\"normal\"\n          onBlur={this.onValueChanges}\n          value={this.state.title}\n          onChange={(e) => this.setState({ title: e.target.value })} />\n        <TextField\n          label=\"Video\"\n          type=\"text\"\n          margin=\"normal\"\n          onBlur={this.onValueChanges}\n          value={this.state.video}\n          onChange={(e) => this.setState({ video: e.target.value })} />\n        {this.renderList(\"Instructions\", \"instructions\")}\n        {withQuestions && this.renderList(\"Hints\", \"hints\")}\n        {withQuestions && this.renderList(\"Choices\", \"choices\")}\n        {withQuestions && this.renderAnswer()}\n      </div>\n    )\n  }\n\n  renderList = (label, listName) => {\n    const list = this.state[listName]\n    const { classes } = this.props\n    let views = list.map((item, i) => <div\n      key={listName + \"_\" + i}\n      className={classes.flex}>\n      <TextField\n        className={classes.flexItem}\n        type=\"text\"\n        margin=\"normal\"\n        value={item}\n        onBlur={this.onValueChanges}\n        onChange={(e) => this.updateItem(listName, i, e.target.value)} />\n      <IconButton\n        key={listName + \"_del_\" + i}\n        aria-label=\"Delete\"\n        className={classes.flexButton}\n        onClick={e => this.removeItem(listName, i)}>\n        <DeleteIcon />\n      </IconButton>\n    </div>)\n    return <div className={classes.container}>\n      <p>{label}</p>\n      {views}\n      <Button onClick={e => this.addItem(listName)} color=\"secondary\" variant=\"outlined\">\n        <AddIcon />Add\n      </Button>\n    </div>\n  }\n\n  removeItem = (listName, i) => {\n    let list = this.state[listName]\n    list.splice(i, 1)\n    let out = {}\n    out[listName] = list\n    this.setState(out)\n  }\n\n  updateItem = (listName, i, value) => {\n    let list = this.state[listName]\n    list[i] = value;\n    let out = {}\n    out[listName] = list\n    this.setState(out)\n  }\n\n  addItem = (listName) => {\n    let list = this.state[listName]\n    list.push(\"\")\n    let out = {}\n    out[listName] = list\n    this.setState(out)\n  }\n\n  renderAnswer = () => {\n    const { choices, answer } = this.state\n    const { classes } = this.props\n    let answerList = choices.filter(item => !!item)\n    if (answerList.length > 0) {\n      return <div className={classes.column}>\n        <InputLabel>Answer</InputLabel>\n        <Select\n          value={answer}\n          onChange={e => {\n            this.setState({\n              answer: e.target.value\n            })\n          }}\n        >\n          {answerList.map(item => {\n            return <MenuItem key={item} value={item}>{item}</MenuItem>\n          })}\n        </Select>\n      </div>\n    } else {\n      return null\n    }\n\n  }\n\n}\n\nconst enhance = compose(\n  withStyles(styles),\n  translate\n);\n\nexport default enhance(RichModelEditor); \n","export const getTitleFromJson = (record, name) => {\n    let object = record[name];\n    let result = \"\"\n    if (typeof object === \"object\") {\n        result = object.title;\n    } else {\n        try {\n            result = JSON.parse(object).title\n        } catch (e) {\n            console.log(object, 'error')\n        }\n    }\n    return result;\n}","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  Edit,\n  Create,\n  SimpleForm,\n  TextField,\n  DisabledInput,\n  ReferenceInput,\n  SelectInput,\n  FunctionField\n} from 'react-admin';\nimport Icon from '@material-ui/icons/LibraryBooks';\nimport { Field } from 'redux-form';\nimport RichModelEditor from '../../components/admin/RichModelEditor'\nimport {getTitleFromJson} from './Utils'\n\nconst required = (message = 'Required') => value => value ? undefined : message;\n\nconst LessonList = (props) => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField label=\"Model Name\" source=\"model.name\" />\n      <FunctionField label=\"Lesson\" render={record => getTitleFromJson(record, \"lesson\")} />\n    </Datagrid>\n  </List>\n);\n\nconst LessonTitle = ({ record }) => <span>Lesson {record.title}</span>;\n\nconst LessonEdit = (props) => (\n  <Edit title={<LessonTitle />} {...props}>\n    <SimpleForm redirect=\"list\">\n      <DisabledInput source=\"id\" />\n      <ReferenceInput label=\"LessonModel\" source=\"model.id\" reference=\"LessonModel\" validate={required()}>\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput>\n      <Field name=\"lesson\" component={RichModelEditor} validate={required()} />\n    </SimpleForm>\n  </Edit>\n);\n\nconst LessonCreate = (props) => (\n  <Create title=\"Create a Lesson\" {...props}>\n    <SimpleForm redirect=\"list\">\n      <ReferenceInput label=\"LessonModel\" source=\"model\" reference=\"LessonModel\" validate={required()}>\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput>\n      <Field name=\"lesson\" component={RichModelEditor} validate={required()} />\n    </SimpleForm>\n  </Create>\n);\n\nexport default {\n  icon: Icon,\n  list: LessonList,\n  edit: LessonEdit,\n  create: LessonCreate\n}\n","import React from 'react';\n\nimport {\n  List,\n  Datagrid,\n  ReferenceInput,\n  SelectInput,\n  Edit,\n  FormTab,\n  Create,\n  TabbedForm,\n  TextField,\n  TextInput,\n  RichTextField,\n  translate,\n  SimpleShowLayout,\n  ShowController,\n  ShowView\n} from 'react-admin';\nimport Icon from '@material-ui/icons/Extension'; \nimport ModelView from '../../components/lessonModel/ModelView'\n\nconst required = (message = 'Required') => value => value ? undefined : message;\n\nconst LessonGroupList = (props) => (\n  <List {...props} title={'resources.lessonGroup.title'}>\n    <Datagrid rowClick=\"show\">\n      <TextField source=\"name\" />\n      <TextField source=\"lesson.model.name\" />\n    </Datagrid>\n  </List>\n);\n\nconst LessonGroupTitle = translate(({ record, translate }) => {\n  return <span>\n    {translate('resources.lesson.edit', { reference: record.name })}\n  </span>;\n});\n\n\nconst LessonGroupEdit = (props) => (\n  <Edit title={<LessonGroupTitle />} {...props}>\n    <TabbedForm redirect=\"list\">\n      <FormTab label=\"resources.lesson.label\">\n        <TextInput source=\"name\" validate={required()} />\n        <ReferenceInput label=\"Lessons\" source=\"lesson.id\" reference=\"Lesson\">\n          <SelectInput optionText=\"lesson\" optionValue=\"id\" />\n        </ReferenceInput>\n      </FormTab>\n      <FormTab label=\"resources.question.label\">\n        <ReferenceInput label=\"resources.question.label\" source=\"question.id\" reference=\"Question\">\n          <SelectInput optionText=\"question\" optionValue=\"id\" />\n        </ReferenceInput>\n      </FormTab>\n      <FormTab label=\"resources.review.label\">\n        <ReferenceInput label=\"resources.review.label\" source=\"review.id\" reference=\"Review\">\n          <SelectInput optionText=\"review\" optionValue=\"id\" />\n        </ReferenceInput>\n      </FormTab>\n    </TabbedForm>\n  </Edit>\n);\n\nconst LessonGroupCreate = (props) => (\n  <Create title=\"Create a Lesson Group\" {...props}>\n    <TabbedForm redirect=\"list\">\n      <FormTab label=\"resources.lesson.label\">\n        <TextInput source=\"name\" validate={required()} />\n        <ReferenceInput label=\"Lessons\" source=\"lesson\" reference=\"Lesson\">\n          <SelectInput optionText=\"lesson\" optionValue=\"id\" />\n        </ReferenceInput>\n      </FormTab>\n      <FormTab label=\"resources.question.label\">\n        <ReferenceInput label=\"resources.question.label\" source=\"question\" reference=\"Question\">\n          <SelectInput optionText=\"question\" optionValue=\"id\" />\n        </ReferenceInput>\n      </FormTab>\n      <FormTab label=\"resources.review.label\">\n        <ReferenceInput label=\"resources.review.label\" source=\"review\" reference=\"Review\">\n          <SelectInput optionText=\"review\" optionValue=\"id\" />\n        </ReferenceInput>\n      </FormTab>\n    </TabbedForm>\n  </Create>\n);\n\nexport const ShowComponent = (props) => {\n  return <ShowController {...props}>\n    {controllerProps => {\n      let code;\n      if (controllerProps.record && controllerProps.record.lesson && controllerProps.record.lesson.model) {\n        code = controllerProps.record.lesson.model.code\n      }\n      return <ShowView {...props} {...controllerProps}>\n        <SimpleShowLayout>\n          <TextField source=\"name\" />\n          <ModelView assetUrl={code} width={400} height={400} showInfo/>\n          <TextField label=\"resources.modelName\"  source=\"lesson.model.name\"/>\n          <TextField label=\"resources.description\" source=\"lesson.model.description\"/>\n          <TextField label=\"resources.code\" source=\"lesson.model.code\"/>\n          <RichTextField source=\"lesson.lesson\" label=\"resources.lesson.label\" />\n          <RichTextField source=\"question.question\" label=\"resources.question.label\" />\n          <RichTextField source=\"review.review\" label=\"resources.review.label\" />\n        </SimpleShowLayout>\n      </ShowView>\n    }\n    }\n  </ShowController>\n};\n\nexport default {\n  icon: Icon,\n  list: LessonGroupList,\n  edit: LessonGroupEdit,\n  create: LessonGroupCreate,\n  show: ShowComponent\n}\n","import React from 'react';\nimport { List, Datagrid, Edit, Create, SimpleForm, TextField, EmailField, DisabledInput, TextInput, email, translate} from 'react-admin';\nimport Icon from '@material-ui/icons/SupervisorAccount';\n\nconst required = (message = 'Required') =>\n  value => value ? undefined : message;\n\nconst StudentList = ({permissions, ...props}) => (\n  <List bulkActions={false} {...props}>\n    <Datagrid rowClick={permissions === \"admin\" ? \"edit\" : \"\"}> \n      <TextField source=\"firstName\" />\n      <TextField source=\"lastName\" />\n      <EmailField source=\"email\" />\n    </Datagrid>\n  </List>\n);\n\nconst StudentTitle = translate(({ record, translate }) => {\n  let name = (record.firstName || \"\") + (\" \"+record.lastName || \"\") \n  return <span>\n     {translate('resources.student.edit', { reference: name })}\n  </span>;\n});\n\nconst StudentEdit = (props) => (\n  <Edit title={<StudentTitle />} {...props}>\n    <SimpleForm redirect=\"list\">\n      <DisabledInput source=\"id\" />\n      <TextInput source=\"email\" validate={email()} type=\"email\" />\n      <TextInput source=\"firstName\" validate={required()} />\n      <TextInput source=\"lastName\" />\n    </SimpleForm>\n  </Edit>\n);\n\nconst StudentCreate = (props) => (\n  <Create title=\"Create a Student\" {...props}>\n    <SimpleForm redirect=\"list\">\n      <TextInput source=\"firstName\" validate={required()} />\n      <TextInput source=\"lastName\" validate={required()} />\n      <TextInput source=\"email\" validate={email()} type=\"email\" />\n      <TextInput source=\"password\" type=\"password\" validate={required()} />\n    </SimpleForm>\n  </Create>\n);\n\nexport default {\n  icon: Icon,\n  list: StudentList,\n  edit: StudentEdit,\n  create: StudentCreate\n}\n","import React from 'react';\nimport { FunctionField, ReferenceInput, SelectInput, List, Datagrid, Edit, Create, SimpleForm, TextField, DisabledInput } from 'react-admin';\nimport Icon from '@material-ui/icons/RateReview';\nimport { Field } from 'redux-form';\nimport RichModelEditor from '../../components/admin/RichModelEditor'\nimport {getTitleFromJson} from './Utils'\n\nconst required = (message = 'Required') =>\n  value => value ? undefined : message;\n\nconst ReviewList = (props) => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField label=\"Model\" source=\"model.name\" />\n      <FunctionField label=\"resources.review.label\" render={record => getTitleFromJson(record, \"review\")} />\n    </Datagrid>\n  </List>\n);\n\nconst ReviewEdit = (props) => (\n  <Edit title=\"resources.review.edit\" {...props}>\n    <SimpleForm redirect=\"list\">\n      <DisabledInput source=\"id\" />\n      <ReferenceInput label=\"LessonModel\" source=\"model.id\" reference=\"LessonModel\" validate={required()}>\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput>\n      <Field name=\"review\" component={RichModelEditor} validate={required()} />\n    </SimpleForm>\n  </Edit>\n);\n\nconst ReviewCreate = (props) => (\n  <Create title=\"resources.review.create\" {...props}>\n    <SimpleForm redirect=\"list\">\n      <ReferenceInput label=\"LessonModel\" source=\"model\" reference=\"LessonModel\" validate={required()}>\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput>\n      <Field name=\"review\" component={RichModelEditor} validate={required()} />\n    </SimpleForm>\n  </Create>\n);\n\nexport default {\n  icon: Icon,\n  list: ReviewList,\n  edit: ReviewEdit,\n  create: ReviewCreate\n}\n","import React from 'react';\nimport { FunctionField, ReferenceInput, SelectInput, List, Datagrid, Edit, Create, SimpleForm, TextField, DisabledInput } from 'react-admin';\nimport Icon from '@material-ui/icons/QuestionAnswer';\nimport { Field } from 'redux-form';\nimport RichModelEditor from '../../components/admin/RichModelEditor'\nimport {getTitleFromJson} from './Utils'\n\n\nconst required = (message = 'Required') =>\n  value => value ? undefined : message;\n\nconst QuestionList = (props) => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField label=\"Model\" source=\"model.name\" />\n      <FunctionField label=\"Question\" render={record => getTitleFromJson(record, \"question\")} />\n    </Datagrid>\n  </List>\n);\n\nconst QuestionEdit = (props) => (\n  <Edit title=\"resources.question.edit\" {...props}>\n    <SimpleForm redirect=\"list\">\n      <DisabledInput source=\"id\" />\n      <ReferenceInput label=\"LessonModel\" source=\"model.id\" reference=\"LessonModel\" validate={required()}>\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput>\n      <Field name=\"question\" component={RichModelEditor} validate={required()} withQuestions={true} />\n    </SimpleForm>\n  </Edit>\n);\n\nconst QuestionCreate = (props) => (\n  <Create title=\"resources.question.create\" {...props}>\n    <SimpleForm redirect=\"list\">\n      <ReferenceInput label=\"LessonModel\" source=\"model\" reference=\"LessonModel\" validate={required()}>\n        <SelectInput optionText=\"name\" optionValue=\"id\" />\n      </ReferenceInput>\n      <Field name=\"question\" component={RichModelEditor} validate={required()} withQuestions={true} />\n    </SimpleForm>\n  </Create>\n);\n\nexport default {\n  icon: Icon,\n  list: QuestionList,\n  edit: QuestionEdit,\n  create: QuestionCreate\n}","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  SelectArrayInput,\n  ReferenceInput,\n  SelectInput,\n  ReferenceArrayInput,\n  Edit,\n  FormTab,\n  Create,\n  TabbedForm,\n  TextField,\n  DisabledInput,\n  TextInput,\n  FunctionField\n} from 'react-admin';\nimport Icon from '@material-ui/icons/School';\n\nconst required = (message = 'Required') =>\n  value => value ? undefined : message;\n\nconst renderName = choice => `${choice.firstName} ${choice.lastName}`;\n\nconst ClassroomList = (props) => (\n  <List bulkActions={false} {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"name\" />\n      <TextField label=\"resources.classroom.teacher\" source=\"teacher.profile.firstName\" />\n      <TextField source=\"subject\" />\n      <FunctionField label=\"resources.classroom.numberStudents\" render={record => record.students.length} />  \n      <FunctionField label=\"resources.classroom.numberLessons\" render={record => record.lessons.length} />  \n    </Datagrid>\n  </List>\n);\n\nconst ClassroomTitle = ({ record }) => {\n  return <span>Classroom {record.name}</span>;\n};\n\nconst ClassroomEdit = (props) => {\n  const renderProfileName = choice => choice ? `${choice.firstName} ${choice.lastName}` : \"\";\n  \n  return (<Edit title={<ClassroomTitle />} {...props} >\n    <TabbedForm redirect=\"list\">\n      <FormTab label=\"resources.info\">\n        <DisabledInput source=\"id\" />\n        <TextInput source=\"name\" validate={required()} />\n        <ReferenceInput label=\"Teacher\" source=\"teacher\" reference=\"Teacher\" validate={required()}>\n          <SelectInput optionText={renderProfileName} optionValue=\"id\" />\n        </ReferenceInput>\n      </FormTab>\n      <FormTab label=\"students\">\n        <ReferenceArrayInput label=\"Students\" source=\"students\" reference=\"Student\">\n          <SelectArrayInput optionText={renderProfileName} optionValue=\"id\" />\n        </ReferenceArrayInput>\n      </FormTab>\n      <FormTab label=\"lessons\">\n        <ReferenceArrayInput label=\"resources.lesson.title\" source=\"lessons\" reference=\"LessonGroup\">\n          <SelectArrayInput optionText=\"name\" optionValue=\"id\" />\n        </ReferenceArrayInput>\n      </FormTab>\n    </TabbedForm>\n  </Edit>);\n};\n\nconst ClassroomCreate = (props) => {\n  return (<Create title=\"Create a Classroom\" {...props} redirect=\"list\">\n    <TabbedForm redirect=\"list\">\n      <FormTab label=\"info\">\n        <TextInput source=\"name\" validate={required()}/>\n        <TextInput source=\"subject\" validate={required()}/>\n        <ReferenceInput label=\"Teacher\" source=\"teacher\" reference=\"Teacher\" validate={required()}>\n          <SelectInput optionText={renderName} optionValue=\"id\" />\n        </ReferenceInput>\n      </FormTab>\n      <FormTab label=\"students\">\n        <ReferenceArrayInput label=\"Students\" source=\"students\" reference=\"Student\">\n          <SelectArrayInput optionText={renderName} optionValue=\"id\" />\n        </ReferenceArrayInput>\n      </FormTab>\n      <FormTab label=\"lessons\">\n        <ReferenceArrayInput label=\"Lessons\" source=\"lessons\" reference=\"LessonGroup\">\n          <SelectArrayInput optionText=\"name\" optionValue=\"id\" />\n        </ReferenceArrayInput>\n      </FormTab>\n    </TabbedForm>\n  </Create>);\n};\n\nexport default {\n  icon: Icon,\n  list: ClassroomList,\n  edit: ClassroomEdit,\n  create: ClassroomCreate\n}\n","import React from 'react';\nimport { List, Datagrid, TextField,  EmailField } from 'react-admin';\nimport Icon from '@material-ui/icons/AccountBox';\nimport {ListItems} from \"../\"\n\nconst TeacherPanel = ({ record }) => {\n  return <ListItems title=\"resources.classroom.name\" list={record.classroomSet} basePath=\"Classroom\"/>\n};\n\nconst ListView = (props) => (\n  <List {...props}  >\n    <Datagrid expand={<TeacherPanel />}>\n      <TextField source=\"id\" />\n      <TextField source=\"firstName\" />\n      <TextField source=\"lastName\" />\n      <EmailField source=\"email\" />\n    </Datagrid>\n  </List>\n);\n\nexport default {\n  icon: Icon,\n  list: ListView\n}\n","import React, { Fragment } from 'react';\nimport compose from 'recompose/compose';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { translate } from 'react-admin';\n\nconst styles = {\n    listItem: {\n        paddingLeft: '1rem',\n    },\n    listItemText: {\n        paddingLeft: 2,\n        fontSize: '1rem',\n    },\n    sidebarIsOpen: {\n        paddingLeft: 25,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n    sidebarIsClosed: {\n        paddingLeft: 0,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n};\n\nconst SubMenu = ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    classes,\n    children,\n    translate,\n}) => (\n    <Fragment>\n        <ListItem\n            dense\n            button\n            onClick={handleToggle}\n            className={classes.listItem}\n        >\n            <ListItemIcon>{isOpen ? <ExpandMore /> : icon}</ListItemIcon>\n            <ListItemText\n                inset\n                primary={isOpen ? translate(name) : ''}\n                secondary={isOpen ? '' : translate(name)}\n                className={classes.listItemText}\n            />\n        </ListItem>\n        <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n            <List\n                dense\n                component=\"div\"\n                disablePadding\n                className={\n                    sidebarIsOpen\n                        ? classes.sidebarIsOpen\n                        : classes.sidebarIsClosed\n                }\n            >\n                {children}\n            </List>\n            <Divider />\n        </Collapse>\n    </Fragment>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(SubMenu);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { withRouter } from 'react-router-dom';\nimport {\n    translate,\n    DashboardMenuItem,\n    MenuItemLink,\n    Responsive,\n    WithPermissions\n} from 'react-admin';\n\nimport SubMenu from './SubMenu';\nimport student from './students';\nimport teacher from './teachers';\nimport review from './reviews';\nimport classroom from './classrooms';\nimport question from './questions';\nimport lesson from './lessons';\nimport lessonModel from './lessonModels';\nimport lessonGroup from './lessonGroups';\n\n\nclass Menu extends Component {\n    state = {\n        menuCatalog: false,\n        menuSales: false,\n        menuCustomers: false,\n    };\n\n    static propTypes = {\n        onMenuClick: PropTypes.func,\n        logout: PropTypes.object,\n    };\n\n    handleToggle = menu => {\n        this.setState(state => ({ [menu]: !state[menu] }));\n    };\n\n    render() {\n        const { onMenuClick, open, logout, translate } = this.props;\n        return (\n            <div>\n                <DashboardMenuItem onClick={onMenuClick} />\n                <MenuItemLink\n                    to={`/Classroom`}\n                    primaryText={translate(`resources.classroom.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<classroom.icon />}\n                    onClick={onMenuClick}\n                />\n                <WithPermissions>\n                    {({ permissions }) => {\n                        if (permissions === 'Admin') {\n                            return (<SubMenu\n                                handleToggle={() => this.handleToggle('menuUsers')}\n                                isOpen={this.state.menuUsers}\n                                sidebarIsOpen={open}\n                                name=\"pos.menu.users\"\n                                icon={<student.icon />}\n                            >\n                                <MenuItemLink\n                                    to={`/Student`}\n                                    primaryText={translate(`resources.student.name`, {\n                                        smart_count: 2,\n                                    })}\n                                    leftIcon={<student.icon />}\n                                    onClick={onMenuClick}\n                                />\n                                <MenuItemLink\n                                    to={`/Teacher`}\n                                    primaryText={translate(`resources.teacher.name`, {\n                                        smart_count: 2,\n                                    })}\n                                    leftIcon={<teacher.icon />}\n                                    onClick={onMenuClick}\n                                />\n                            </SubMenu>);\n                        } else if (permissions === 'Teacher') {\n                            return <MenuItemLink\n                                to={`/Student`}\n                                primaryText={translate(`resources.student.myStudents`, {\n                                    smart_count: 2,\n                                })}\n                                leftIcon={<student.icon />}\n                                onClick={onMenuClick}\n                            />;\n                        } else {\n                            return null;\n                        }\n                    }}\n                </WithPermissions>\n\n\n                <SubMenu\n                    handleToggle={() => this.handleToggle('menuLessons')}\n                    isOpen={this.state.menuLessons}\n                    sidebarIsOpen={open}\n                    name=\"pos.menu.lessons\"\n                    icon={<lesson.icon />}\n                >\n                    <MenuItemLink\n                        to={`/LessonGroup`}\n                        primaryText={translate(`resources.lessonGroup.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<lessonGroup.icon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/Lesson`}\n                        primaryText={translate(`resources.lesson.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<lesson.icon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/Review`}\n                        primaryText={translate(`resources.review.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<review.icon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/Question`}\n                        primaryText={translate(`resources.question.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<question.icon />}\n                        onClick={onMenuClick}\n                    />\n                </SubMenu>\n\n                <MenuItemLink\n                    to={`/LessonModel`}\n                    primaryText={translate(`resources.lessonModel.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<lessonModel.icon />}\n                    onClick={onMenuClick}\n                />\n\n                <MenuItemLink\n                    to=\"/configuration\"\n                    primaryText={translate('pos.configuration')}\n                    leftIcon={<SettingsIcon />}\n                    onClick={onMenuClick}\n                />\n                <Responsive\n                    small={logout}\n                    medium={null} // Pass null to render nothing on larger devices\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    open: state.admin.ui.sidebarOpen,\n    theme: state.theme,\n    locale: state.i18n.locale,\n});\n\nconst enhance = compose(\n    withRouter,\n    connect(\n        mapStateToProps,\n        {}\n    ),\n    translate\n);\n\nexport default enhance(Menu);\n","export const darkTheme = {\n    palette: {\n        type: 'dark', // Switching the dark mode on is a single property value change.\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        type: 'light',\n        background:{\n            \"paper\":\"#fff\",\n            \"default\":\"#fafafa\"\n        },\n        secondary: {\n            //light blue 400\n            light: '#73e8ff',\n            main: \"#29b6f6\",\n            dark: '#0086c3',\n            text: \"#fafafa\",\n            contrastText: '#fafafa',\n        },\n        primary: {\n             //orange 400\n            light: '#ffd95b',\n            main: \"#ffa726\",\n            dark: '#c77800',\n            text: \"#424242\",\n            contrastText: '#424242',\n        },\n    },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Sidebar } from 'react-admin';\nimport Menu from './Menu';\nimport { darkTheme, lightTheme } from '../themes';\n\nconst CustomSidebar = props => <Sidebar {...props} size={250} />;\nconst CustomLayout = props => (\n    <Layout {...props}  sidebar={CustomSidebar} menu={Menu} />\n);\n\nexport default connect(\n    state => ({\n        theme: state.theme === 'dark' ? darkTheme : lightTheme,\n    }),\n    {}\n)(CustomLayout);","import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { translate } from 'react-admin';\nimport compose from 'recompose/compose';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst ListItems = ({ list = [], basePath, title, translate }) =>\n    <List\n        subheader={title && <ListSubheader component=\"div\">{translate(title, list.length)}</ListSubheader>}\n        component=\"nav\">\n        {\n            list.map(item =>\n                <ListItem key={\"item_\" + item.id} button component=\"a\" href={`#/${basePath}/${item.id}`} >\n                    <ListItemText primary={item.name} />\n                </ListItem>\n            )\n        }\n    </List>\n\n\n\nconst enhance = compose(\n    translate\n);\n\nexport default enhance(ListItems);\n\n","import React, { Component } from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport customRoutes from './routes';\nimport authProvider from './providers/authProvider';\nimport Login from './components/login';\nimport Dashboard from './components/dashboard';\nimport themeReducer from './themeReducer';\nimport englishMessages from './i18n/en';\nimport {buildDataProvider} from './providers/dataProvider'\nimport { Footer } from './components/Footer'\n\nimport {\n  lessons,\n  students,\n  lessonModels,\n  lessonGroups,\n  questions,\n  reviews,\n  classrooms,\n  teachers,\n  AppLayout\n} from './components';\nimport \"./App.css\"\n\nconst i18nProvider = locale => {\n  if (locale === 'es') {\n    return import('./i18n/es').then(messages => messages.default);\n  }\n  // Always fallback on english\n  return englishMessages;\n};\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = { dataProvider: null };\n  }\n\n  componentDidMount() {\n    buildDataProvider().then(dataProvider => this.setState({ dataProvider }))\n  }\n\n  render() {\n    const { dataProvider } = this.state;\n\n    if (!dataProvider) {\n      return <div>Loading</div>;\n    }\n\n    return (\n      <React.Fragment>\n        <Admin\n          loginPage={Login}\n          authProvider={authProvider}\n          dataProvider={dataProvider}\n          dashboard={Dashboard}\n          customRoutes={customRoutes}\n          i18nProvider={i18nProvider}\n          locale=\"en\"\n          customReducers={{ theme: themeReducer }}\n          appLayout={AppLayout}\n        >\n          <Resource name=\"Lesson\" {...lessons} />\n          <Resource name=\"Classroom\" {...classrooms} />\n          <Resource name=\"Student\" {...students} />\n          <Resource name=\"Teacher\" {...teachers} />\n          <Resource name=\"LessonModel\"  {...lessonModels} />\n          <Resource name=\"LessonGroup\"  {...lessonGroups} />\n          <Resource name=\"Question\" {...questions} />\n          <Resource name=\"Review\" {...reviews} />\n        </Admin>\n        <Footer text={\"Redhouse 2019\"} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}